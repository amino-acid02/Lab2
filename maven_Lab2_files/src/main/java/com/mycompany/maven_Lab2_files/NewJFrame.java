package com.mycompany.maven_Lab2_files;

import com.google.common.io.Files;
import static com.mycompany.maven_Lab2_files.NewJFrame.main;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class NewJFrame extends javax.swing.JFrame {

    public NewJFrame() {
        initComponents();
    }

    Reader reader;
    ArrayList<Reactor> reactorsList;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChooseFile = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tree = new javax.swing.JTree();
        SourceOfFile = new javax.swing.JTextField();
        ExitButtom = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ChooseFile.setCurrentDirectory(new java.io.File("C:\\Users\\Амина\\Documents\\GitHub\\Lab2\\maven_Lab2_files"));
        ChooseFile.setToolTipText("");
        ChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseFileActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(Tree);

        SourceOfFile.setEditable(false);
        SourceOfFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SourceOfFileActionPerformed(evt);
            }
        });

        ExitButtom.setText("Exit");
        ExitButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(ExitButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SourceOfFile, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButtom, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addComponent(SourceOfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //метод определения файла и способа чтения
    private void ChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseFileActionPerformed
    try {
        String selectedFile = ChooseFile.getSelectedFile().toString();
        String extensionFile = Files.getFileExtension(selectedFile);
        
        switch(extensionFile)
        {
            case ("yaml"):
            {
                if(!selectedFile.endsWith("YAML_file.yaml"))
                {
                    JOptionPane.showMessageDialog(null,"Wrong file!","Ok",JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
                reader = new readerYAML(selectedFile);
                startToRead(reader, reactorsList);
                break;
            }
            case ("xml"):
            {
                if(!selectedFile.endsWith("XML_file.xml"))
                {
                    JOptionPane.showMessageDialog(null,"Wrong file!","Ok",JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
                reader = new readerXML(selectedFile);
                startToRead(reader, reactorsList);
                break;
            }
            case ("json"):
            {
                if(!selectedFile.endsWith("JSON_file.json"))
                {
                    JOptionPane.showMessageDialog(null,"Wrong file!","Ok",JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
                reader = new readerJSON(selectedFile);
                startToRead(reader, reactorsList);
                break;
            }
            default:
            {
                if(!selectedFile.endsWith("JSON_file.json") && !selectedFile.endsWith("XML_file.xml") && !selectedFile.endsWith("YAML_file.yaml"))
                {
                    JOptionPane.showMessageDialog(null,"Wrong file!","Ok",JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
        }
    }
    catch (IllegalAccessException ex) {
        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_ChooseFileActionPerformed
    //метод чтения файла и получения списка реакторов
    private void startToRead(Reader reader, ArrayList<Reactor> reactorsList) throws IllegalAccessException{
        reader.readFile();
        reactorsList = reader.getReactors();
        createTree(reactorsList);
        SourceOfFile.setText(reactorsList.get(0).getSource());
    }
    //метод создания дерева
    private void createTree(ArrayList<Reactor> reactorsList) throws IllegalAccessException {
        DefaultMutableTreeNode main = new DefaultMutableTreeNode("Reactors");
        for(Reactor reactor : reactorsList)
        {
            main.add(reactor.getNode());
        }
        Tree.setModel(new DefaultTreeModel(main));
    }
    private void ExitButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtomActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtomActionPerformed

    private void SourceOfFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SourceOfFileActionPerformed

    }//GEN-LAST:event_SourceOfFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser ChooseFile;
    private javax.swing.JButton ExitButtom;
    private javax.swing.JTextField SourceOfFile;
    private javax.swing.JTree Tree;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

   
}
